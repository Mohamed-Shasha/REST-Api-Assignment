/// <reference types="node" />
import * as dgram from 'dgram';
import { ServiceContext, Service, Handler } from '@hprose/rpc-core';
export interface UdpServiceContext extends ServiceContext {
    readonly socket: dgram.Socket;
    readonly handler: UdpHandler;
}
export declare class UdpHandler implements Handler {
    readonly service: Service;
    static serverTypes: Function[];
    onclose?: (socket: dgram.Socket) => void;
    onerror?: (error: Error) => void;
    constructor(service: Service);
    private send;
    bind(socket: dgram.Socket): void;
    handler: (socket: dgram.Socket) => void;
}
declare module '@hprose/rpc-core' {
    interface UdpHandler {
        onclose?: (socket: dgram.Socket) => void;
        onerror?: (error: Error) => void;
        bind(socket: dgram.Socket): void;
        handler(socket: dgram.Socket): void;
    }
    interface Service {
        udp: UdpHandler;
    }
}
//# sourceMappingURL=UdpHandler.d.ts.map