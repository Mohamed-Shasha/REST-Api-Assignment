"use strict";
/*--------------------------------------------------------*\
|                                                          |
|                          hprose                          |
|                                                          |
| Official WebSite: https://hprose.com                     |
|                                                          |
| WebSocketTransport.ts                                    |
|                                                          |
| WebSocketTransport for TypeScript.                       |
|                                                          |
| LastModified: Dec 17, 2019                               |
| Author: Ma Bingyao <andot@hprose.com>                    |
|                                                          |
\*________________________________________________________*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebSocketTransport = void 0;
var http = __importStar(require("http"));
var https = __importStar(require("https"));
var ws_1 = __importDefault(require("ws"));
var rpc_core_1 = require("@hprose/rpc-core");
var io_1 = require("@hprose/io");
var WebSocketTransport = /** @class */ (function () {
    function WebSocketTransport() {
        this.counter = 0;
        this.results = new Map();
        this.websockets = Object.create(null);
        this.httpAgent = new http.Agent({ keepAlive: true });
        this.httpsAgent = new https.Agent({ keepAlive: true });
        this.options = Object.create(null);
        this.compress = false;
    }
    WebSocketTransport.prototype.connect = function (uri) {
        return __awaiter(this, void 0, void 0, function () {
            var websocket, ws, onerror;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.websockets[uri]];
                    case 1:
                        websocket = _a.sent();
                        if (websocket !== undefined
                            && websocket.readyState !== ws_1.default.CLOSING
                            && websocket.readyState !== ws_1.default.CLOSED) {
                            return [2 /*return*/, websocket];
                        }
                        ws = rpc_core_1.defer();
                        this.options.perMessageDeflate = false;
                        this.options.protocol = 'hprose';
                        if (this.options.agent === undefined) {
                            if (uri.toLowerCase().startsWith('https://')) {
                                this.options.agent = this.httpsAgent;
                            }
                            else {
                                this.options.agent = this.httpAgent;
                            }
                        }
                        websocket = new ws_1.default(uri, this.options);
                        websocket.binaryType = 'arraybuffer';
                        websocket.on('open', function () {
                            ws.resolve(websocket);
                        });
                        websocket.on('message', function (data) { return __awaiter(_this, void 0, void 0, function () {
                            var instream, index, response, has_error, results, result;
                            return __generator(this, function (_a) {
                                instream = new io_1.ByteStream(data);
                                index = instream.readInt32BE();
                                response = instream.remains;
                                has_error = (index & 0x80000000) !== 0;
                                index &= 0x7FFFFFFF;
                                results = this.results.get(websocket);
                                if (results) {
                                    result = results[index];
                                    delete results[index];
                                    if (has_error) {
                                        if (result) {
                                            result.reject(new Error(io_1.fromUint8Array(response)));
                                        }
                                        websocket.close();
                                    }
                                    else if (result) {
                                        result.resolve(response);
                                    }
                                }
                                return [2 /*return*/];
                            });
                        }); });
                        onerror = function (error) { return __awaiter(_this, void 0, void 0, function () {
                            var results, index, result;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        results = this.results.get(websocket);
                                        if (results) {
                                            for (index in results) {
                                                result = results[index];
                                                result.reject(error);
                                                delete results[index];
                                            }
                                        }
                                        return [4 /*yield*/, this.websockets[uri]];
                                    case 1:
                                        if ((_a.sent()) === websocket) {
                                            delete this.websockets[uri];
                                        }
                                        return [2 /*return*/];
                                }
                            });
                        }); };
                        websocket.on('error', onerror);
                        websocket.on('close', function (code, reason) {
                            if (reason) {
                                onerror(new Error(code + ":" + reason));
                            }
                            else {
                                onerror(new Error("" + code));
                            }
                        });
                        this.websockets[uri] = ws.promise;
                        return [2 /*return*/, ws.promise];
                }
            });
        });
    };
    WebSocketTransport.prototype.transport = function (request, context) {
        return __awaiter(this, void 0, void 0, function () {
            var uri, index, result, websocket, results, timeoutId_1, header;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        uri = context.uri;
                        index = (this.counter < 0x7FFFFFFF) ? ++this.counter : this.counter = 0;
                        result = rpc_core_1.defer();
                        return [4 /*yield*/, this.connect(uri)];
                    case 1:
                        websocket = _a.sent();
                        if (this.results.get(websocket) === undefined) {
                            this.results.set(websocket, Object.create(null));
                        }
                        results = this.results.get(websocket);
                        results[index] = result;
                        if (context.timeout > 0) {
                            timeoutId_1 = setTimeout(function () {
                                delete results[index];
                                result.reject(new rpc_core_1.TimeoutError());
                            }, context.timeout);
                            result.promise.then(function () {
                                clearTimeout(timeoutId_1);
                            }, function () {
                                clearTimeout(timeoutId_1);
                            });
                        }
                        header = new Uint8Array(4);
                        io_1.writeInt32BE(header, 0, index);
                        websocket.send(header, {
                            binary: true,
                            compress: this.compress,
                            fin: false,
                        }, function (error) {
                            if (error) {
                                result.reject(error);
                                delete results[index];
                            }
                        });
                        websocket.send(request, {
                            binary: true,
                            compress: this.compress
                        }, function (error) {
                            if (error) {
                                result.reject(error);
                                delete results[index];
                            }
                        });
                        return [2 /*return*/, result.promise];
                }
            });
        });
    };
    WebSocketTransport.prototype.abort = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b, _i, uri, websocket;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _a = [];
                        for (_b in this.websockets)
                            _a.push(_b);
                        _i = 0;
                        _c.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 4];
                        uri = _a[_i];
                        websocket = this.websockets[uri];
                        delete this.websockets[uri];
                        if (!websocket) return [3 /*break*/, 3];
                        return [4 /*yield*/, websocket];
                    case 2:
                        (_c.sent()).close(1000);
                        _c.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    WebSocketTransport.schemes = ['ws', 'wss'];
    return WebSocketTransport;
}());
exports.WebSocketTransport = WebSocketTransport;
rpc_core_1.Client.register('websocket', WebSocketTransport);
//# sourceMappingURL=WebSocketTransport.js.map