/// <reference types="node" />
import * as tls from 'tls';
import { Transport, Context } from '@hprose/rpc-core';
export declare class SocketTransport implements Transport {
    static readonly schemes: string[];
    private counter;
    private results;
    private sockets;
    noDelay: boolean;
    keepAlive: boolean;
    options: tls.SecureContextOptions;
    private connect;
    private receive;
    private getSocket;
    transport(request: Uint8Array, context: Context): Promise<Uint8Array>;
    abort(): Promise<void>;
}
declare module '@hprose/rpc-core' {
    interface SocketTransport {
        noDelay: boolean;
        keepAlive: boolean;
        options: tls.SecureContextOptions;
        transport(request: Uint8Array, context: Context): Promise<Uint8Array>;
        abort(): Promise<void>;
    }
    interface Client {
        socket: SocketTransport;
    }
}
//# sourceMappingURL=SocketTransport.d.ts.map