/// <reference types="node" />
import * as http from 'http';
import * as https from 'https';
import WebSocket from 'ws';
import { Context, Transport } from '@hprose/rpc-core';
export declare class WebSocketTransport implements Transport {
    static readonly schemes: string[];
    private counter;
    private results;
    private websockets;
    httpAgent: http.Agent;
    httpsAgent: https.Agent;
    options: WebSocket.ClientOptions;
    compress: boolean;
    private connect;
    transport(request: Uint8Array, context: Context): Promise<Uint8Array>;
    abort(): Promise<void>;
}
declare module '@hprose/rpc-core' {
    interface WebSocketTransport {
        httpAgent: http.Agent;
        httpsAgent: https.Agent;
        options: WebSocket.ClientOptions;
        compress: boolean;
        transport(request: Uint8Array, context: Context): Promise<Uint8Array>;
        abort(): Promise<void>;
    }
    interface Client {
        websocket: WebSocketTransport;
    }
}
//# sourceMappingURL=WebSocketTransport.d.ts.map