"use strict";
/*--------------------------------------------------------*\
|                                                          |
|                          hprose                          |
|                                                          |
| Official WebSite: https://hprose.com                     |
|                                                          |
| InvokeManager.ts                                         |
|                                                          |
| InvokeManager for TypeScript.                            |
|                                                          |
| LastModified: Feb 16, 2020                               |
| Author: Ma Bingyao <andot@hprose.com>                    |
|                                                          |
\*________________________________________________________*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PluginManager_1 = require("./PluginManager");
var InvokeManager = /** @class */ (function (_super) {
    __extends(InvokeManager, _super);
    function InvokeManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InvokeManager.prototype.getNextHandler = function (handler, next) {
        return function (name, args, context) { return handler(name, args, context, next); };
    };
    return InvokeManager;
}(PluginManager_1.PluginManager));
exports.InvokeManager = InvokeManager;
//# sourceMappingURL=InvokeManager.js.map