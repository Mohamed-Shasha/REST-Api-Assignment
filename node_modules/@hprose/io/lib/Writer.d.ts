import { ByteStream } from './ByteStream';
import './serializers/BigIntSerializer';
import './serializers/BigIntArraySerializer';
export declare class Writer {
    readonly stream: ByteStream;
    utc: boolean;
    private refer?;
    private readonly ref;
    private last;
    constructor(stream: ByteStream, simple?: boolean, utc?: boolean);
    get simple(): boolean;
    set simple(value: boolean);
    serialize<T>(value: T): void;
    write<T>(value: T): void;
    writeReference(value: any): boolean;
    setReference(value: any): void;
    addReferenceCount(count: number): void;
    reset(): void;
    writeClass(type: any, action: () => void): number;
}
//# sourceMappingURL=Writer.d.ts.map