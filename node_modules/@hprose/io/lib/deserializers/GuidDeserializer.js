"use strict";
/*--------------------------------------------------------*\
|                                                          |
|                          hprose                          |
|                                                          |
| Official WebSite: https://hprose.com                     |
|                                                          |
| GuidDeserializer.ts                                      |
|                                                          |
| hprose Guid deserializer for TypeScript.                 |
|                                                          |
| LastModified: Mar 29, 2020                               |
| Author: Ma Bingyao <andot@hprose.com>                    |
|                                                          |
\*________________________________________________________*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var BaseDeserializer_1 = require("./BaseDeserializer");
var ReferenceReader = __importStar(require("../ReferenceReader"));
var guid_typescript_1 = require("guid-typescript");
var GuidDeserializer = /** @class */ (function (_super) {
    __extends(GuidDeserializer, _super);
    function GuidDeserializer() {
        return _super.call(this, 'Guid') || this;
    }
    GuidDeserializer.prototype.read = function (reader, tag) {
        switch (tag) {
            case 103 /* TagGuid */: return ReferenceReader.readGuid(reader);
            case 115 /* TagString */: return guid_typescript_1.Guid.parse(ReferenceReader.readString(reader));
            case 114 /* TagRef */: {
                var result = reader.readReference();
                if (result instanceof guid_typescript_1.Guid) {
                    return result;
                }
                else {
                    return guid_typescript_1.Guid.parse(result.toString());
                }
            }
            default: return _super.prototype.read.call(this, reader, tag);
        }
    };
    GuidDeserializer.instance = new GuidDeserializer();
    return GuidDeserializer;
}(BaseDeserializer_1.BaseDeserializer));
exports.GuidDeserializer = GuidDeserializer;
//# sourceMappingURL=GuidDeserializer.js.map