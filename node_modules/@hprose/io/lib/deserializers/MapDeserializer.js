"use strict";
/*--------------------------------------------------------*\
|                                                          |
|                          hprose                          |
|                                                          |
| Official WebSite: https://hprose.com                     |
|                                                          |
| MapDeserializer.ts                                       |
|                                                          |
| hprose Map deserializer for TypeScript.                  |
|                                                          |
| LastModified: Jan 11, 2019                               |
| Author: Ma Bingyao <andot@hprose.com>                    |
|                                                          |
\*________________________________________________________*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var BaseDeserializer_1 = require("./BaseDeserializer");
var ReferenceReader = __importStar(require("../ReferenceReader"));
var MapDeserializer = /** @class */ (function (_super) {
    __extends(MapDeserializer, _super);
    function MapDeserializer() {
        return _super.call(this, 'Map') || this;
    }
    MapDeserializer.prototype.read = function (reader, tag) {
        switch (tag) {
            case 101 /* TagEmpty */: return new Map();
            case 109 /* TagMap */: return ReferenceReader.readMap(reader);
            case 111 /* TagObject */: return ReferenceReader.readObjectAsMap(reader);
            default:
                return _super.prototype.read.call(this, reader, tag);
        }
    };
    MapDeserializer.instance = new MapDeserializer();
    return MapDeserializer;
}(BaseDeserializer_1.BaseDeserializer));
exports.MapDeserializer = MapDeserializer;
//# sourceMappingURL=MapDeserializer.js.map