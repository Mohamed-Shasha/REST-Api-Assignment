import { Reader } from './Reader';
import { BaseDeserializer } from './BaseDeserializer';
import { Deserializer } from './Deserializer';
interface TypedArrayConstructor extends Function {
    new (length: number): TypedArray;
}
interface TypedArray {
    [index: number]: number;
    readonly length: number;
}
export declare function readIntArray(reader: Reader, type: TypedArrayConstructor): TypedArray;
export declare function readNumberArray(reader: Reader, type: TypedArrayConstructor): TypedArray;
export declare class Int8ArrayDeserializer extends BaseDeserializer implements Deserializer {
    static instance: Deserializer;
    constructor();
    read(reader: Reader, tag: number): Int8Array;
}
export declare class Int16ArrayDeserializer extends BaseDeserializer implements Deserializer {
    static instance: Deserializer;
    constructor();
    read(reader: Reader, tag: number): Int16Array;
}
export declare class Int32ArrayDeserializer extends BaseDeserializer implements Deserializer {
    static instance: Deserializer;
    constructor();
    read(reader: Reader, tag: number): Int32Array;
}
export declare class Uint8ArrayDeserializer extends BaseDeserializer implements Deserializer {
    static instance: Deserializer;
    constructor();
    read(reader: Reader, tag: number): Uint8Array;
}
export declare class Uint8ClampedArrayDeserializer extends BaseDeserializer implements Deserializer {
    static instance: Deserializer;
    constructor();
    read(reader: Reader, tag: number): Uint8ClampedArray;
}
export declare class Uint16ArrayDeserializer extends BaseDeserializer implements Deserializer {
    static instance: Deserializer;
    constructor();
    read(reader: Reader, tag: number): Uint16Array;
}
export declare class Uint32ArrayDeserializer extends BaseDeserializer implements Deserializer {
    static instance: Deserializer;
    constructor();
    read(reader: Reader, tag: number): Uint32Array;
}
export declare class Float32ArrayDeserializer extends BaseDeserializer implements Deserializer {
    static instance: Deserializer;
    constructor();
    read(reader: Reader, tag: number): Float32Array;
}
export declare class Float64ArrayDeserializer extends BaseDeserializer implements Deserializer {
    static instance: Deserializer;
    constructor();
    read(reader: Reader, tag: number): Float64Array;
}
export {};
//# sourceMappingURL=TypedArrayDeserializer.d.ts.map