"use strict";
/*--------------------------------------------------------*\
|                                                          |
|                          hprose                          |
|                                                          |
| Official WebSite: https://hprose.com                     |
|                                                          |
| BooleanDeserializer.ts                                   |
|                                                          |
| hprose boolean deserializer for TypeScript.              |
|                                                          |
| LastModified: Mar 29, 2020                               |
| Author: Ma Bingyao <andot@hprose.com>                    |
|                                                          |
\*________________________________________________________*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var BaseDeserializer_1 = require("./BaseDeserializer");
var ValueReader = __importStar(require("../ValueReader"));
var ReferenceReader = __importStar(require("../ReferenceReader"));
var BooleanDeserializer = /** @class */ (function (_super) {
    __extends(BooleanDeserializer, _super);
    function BooleanDeserializer() {
        return _super.call(this, 'boolean') || this;
    }
    BooleanDeserializer.prototype.read = function (reader, tag) {
        var stream = reader.stream;
        switch (tag) {
            case 116 /* TagTrue */: return true;
            case 102 /* TagFalse */:
            case 101 /* TagEmpty */:
            case 78 /* TagNaN */:
            case 0x30: return false;
            case 105 /* TagInteger */:
            case 108 /* TagLong */: return ValueReader.readInt(stream) !== 0;
            case 100 /* TagDouble */: return ValueReader.readDouble(stream) !== 0;
            case 115 /* TagString */: return Boolean(ReferenceReader.readString(reader));
            case 117 /* TagUTF8Char */: return '0\0'.indexOf(stream.readString(1)) === -1;
            case 73 /* TagInfinity */:
                stream.readByte();
                return true;
            case 114 /* TagRef */: return Boolean(reader.readReference().toString());
            default:
                if (tag >= 0x31 && tag <= 0x39) {
                    return true;
                }
                return _super.prototype.read.call(this, reader, tag);
        }
    };
    BooleanDeserializer.instance = new BooleanDeserializer();
    return BooleanDeserializer;
}(BaseDeserializer_1.BaseDeserializer));
exports.BooleanDeserializer = BooleanDeserializer;
//# sourceMappingURL=BooleanDeserializer.js.map