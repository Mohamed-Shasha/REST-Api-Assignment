"use strict";
/*--------------------------------------------------------*\
|                                                          |
|                          hprose                          |
|                                                          |
| Official WebSite: https://hprose.com                     |
|                                                          |
| DefaultDeserializer.ts                                   |
|                                                          |
| hprose DefaultDeserializer for TypeScript.               |
|                                                          |
| LastModified: Feb 8, 2019                                |
| Author: Ma Bingyao <andot@hprose.com>                    |
|                                                          |
\*________________________________________________________*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var BaseDeserializer_1 = require("./BaseDeserializer");
var StringDeserializer_1 = require("./StringDeserializer");
var ValueReader = __importStar(require("../ValueReader"));
var ReferenceReader = __importStar(require("../ReferenceReader"));
var DefaultDeserializer = /** @class */ (function (_super) {
    __extends(DefaultDeserializer, _super);
    function DefaultDeserializer() {
        return _super.call(this, 'any') || this;
    }
    DefaultDeserializer.prototype.read = function (reader, tag) {
        if (tag >= 0x30 && tag <= 0x39) {
            return tag - 0x30;
        }
        var stream = reader.stream;
        switch (tag) {
            case 105 /* TagInteger */: return ValueReader.readInt(stream);
            case 115 /* TagString */: return ReferenceReader.readString(reader);
            case 98 /* TagBytes */: return ReferenceReader.readBytes(reader);
            case 116 /* TagTrue */: return true;
            case 102 /* TagFalse */: return false;
            case 101 /* TagEmpty */: return '';
            case 111 /* TagObject */: return ReferenceReader.readObject(reader);
            case 68 /* TagDate */: return ReferenceReader.readDateTime(reader);
            case 84 /* TagTime */: return ReferenceReader.readTime(reader);
            case 103 /* TagGuid */: return ReferenceReader.readGuid(reader);
            case 108 /* TagLong */:
                switch (reader.longType) {
                    case 'number':
                        return ValueReader.readInt(stream);
                    case 'bigint':
                        if (typeof BigInt !== 'undefined') {
                            return BigInt(stream.readUntil(59 /* TagSemicolon */));
                        }
                    // tslint:disable-next-line:no-switch-case-fall-through
                    case 'string':
                        return stream.readUntil(59 /* TagSemicolon */);
                }
                break;
            case 100 /* TagDouble */: return ValueReader.readDouble(stream);
            case 78 /* TagNaN */: return NaN;
            case 73 /* TagInfinity */: return ValueReader.readInfinity(stream);
            case 117 /* TagUTF8Char */: return stream.readString(1);
            case 97 /* TagList */: return ReferenceReader.readArray(reader);
            case 109 /* TagMap */: return (reader.dictType === 'map') ? ReferenceReader.readMap(reader) : readDict(reader);
            case 69 /* TagError */: return new Error(reader.deserialize(String));
            default: return _super.prototype.read.call(this, reader, tag);
        }
    };
    DefaultDeserializer.instance = new DefaultDeserializer();
    return DefaultDeserializer;
}(BaseDeserializer_1.BaseDeserializer));
exports.DefaultDeserializer = DefaultDeserializer;
function readDict(reader) {
    var stream = reader.stream;
    var dict = Object.create(null);
    reader.addReference(dict);
    var count = ValueReader.readCount(stream);
    var strDeserializer = StringDeserializer_1.StringDeserializer.instance;
    var deserializer = DefaultDeserializer.instance;
    for (; count > 0; --count) {
        var key = strDeserializer.deserialize(reader);
        var value = deserializer.deserialize(reader);
        dict[key] = value;
    }
    stream.readByte();
    return dict;
}
//# sourceMappingURL=DefaultDeserializer.js.map