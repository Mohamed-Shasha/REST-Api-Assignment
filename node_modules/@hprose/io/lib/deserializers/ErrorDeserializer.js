"use strict";
/*--------------------------------------------------------*\
|                                                          |
|                          hprose                          |
|                                                          |
| Official WebSite: https://hprose.com                     |
|                                                          |
| ErrorDeserializer.ts                                     |
|                                                          |
| hprose Error deserializer for TypeScript.                |
|                                                          |
| LastModified: Feb 8, 2019                                |
| Author: Ma Bingyao <andot@hprose.com>                    |
|                                                          |
\*________________________________________________________*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var BaseDeserializer_1 = require("./BaseDeserializer");
var ErrorDeserializer = /** @class */ (function (_super) {
    __extends(ErrorDeserializer, _super);
    function ErrorDeserializer() {
        return _super.call(this, 'Error') || this;
    }
    ErrorDeserializer.prototype.read = function (reader, tag) {
        switch (tag) {
            case 69 /* TagError */: return new Error(reader.deserialize(String));
            default: return _super.prototype.read.call(this, reader, tag);
        }
    };
    ErrorDeserializer.instance = new ErrorDeserializer();
    return ErrorDeserializer;
}(BaseDeserializer_1.BaseDeserializer));
exports.ErrorDeserializer = ErrorDeserializer;
//# sourceMappingURL=ErrorDeserializer.js.map