"use strict";
/*--------------------------------------------------------*\
|                                                          |
|                          hprose                          |
|                                                          |
| Official WebSite: https://hprose.com                     |
|                                                          |
| Deserializer.ts                                          |
|                                                          |
| hprose Deserializer for TypeScript.                      |
|                                                          |
| LastModified: Mar 29, 2029                               |
| Author: Ma Bingyao <andot@hprose.com>                    |
|                                                          |
\*________________________________________________________*/
Object.defineProperty(exports, "__esModule", { value: true });
var ByteStream_1 = require("./ByteStream");
var ArrayDeserializer_1 = require("./deserializers/ArrayDeserializer");
var TypedArrayDeserializer_1 = require("./deserializers/TypedArrayDeserializer");
var FunctionDeserializer_1 = require("./deserializers/FunctionDeserializer");
var NumberDeserializer_1 = require("./deserializers/NumberDeserializer");
var BooleanDeserializer_1 = require("./deserializers/BooleanDeserializer");
var StringDeserializer_1 = require("./deserializers/StringDeserializer");
var DateDeserializer_1 = require("./deserializers/DateDeserializer");
var ByteStreamDeserializer_1 = require("./deserializers/ByteStreamDeserializer");
var SetDeserializer_1 = require("./deserializers/SetDeserializer");
var MapDeserializer_1 = require("./deserializers/MapDeserializer");
var GuidDeserializer_1 = require("./deserializers/GuidDeserializer");
var ErrorDeserializer_1 = require("./deserializers/ErrorDeserializer");
var NullDeserializer_1 = require("./deserializers/NullDeserializer");
var DefaultDeserializer_1 = require("./deserializers/DefaultDeserializer");
var guid_typescript_1 = require("guid-typescript");
var deserializers = new Map();
function register(type, deserializer) {
    deserializers.set(type, deserializer);
}
exports.register = register;
function getInstance(type) {
    if (type) {
        switch (type) {
            case Function: return FunctionDeserializer_1.FunctionDeserializer.instance;
            case Number: return NumberDeserializer_1.NumberDeserializer.instance;
            case Boolean: return BooleanDeserializer_1.BooleanDeserializer.instance;
            case String: return StringDeserializer_1.StringDeserializer.instance;
            case Date: return DateDeserializer_1.DateDeserializer.instance;
            case Array: return ArrayDeserializer_1.ArrayDeserializer.instance;
            case ByteStream_1.ByteStream: return ByteStreamDeserializer_1.ByteStreamDeserializer.instance;
            case Uint8Array: return TypedArrayDeserializer_1.Uint8ArrayDeserializer.instance;
            case Uint8ClampedArray: return TypedArrayDeserializer_1.Uint8ClampedArrayDeserializer.instance;
            case Uint16Array: return TypedArrayDeserializer_1.Uint16ArrayDeserializer.instance;
            case Uint32Array: return TypedArrayDeserializer_1.Uint32ArrayDeserializer.instance;
            case Int8Array: return TypedArrayDeserializer_1.Int8ArrayDeserializer.instance;
            case Int16Array: return TypedArrayDeserializer_1.Int16ArrayDeserializer.instance;
            case Int32Array: return TypedArrayDeserializer_1.Int32ArrayDeserializer.instance;
            case Float32Array: return TypedArrayDeserializer_1.Float32ArrayDeserializer.instance;
            case Float64Array: return TypedArrayDeserializer_1.Float64ArrayDeserializer.instance;
            case Set: return SetDeserializer_1.SetDeserializer.instance;
            case Map: return MapDeserializer_1.MapDeserializer.instance;
            case guid_typescript_1.Guid: return GuidDeserializer_1.GuidDeserializer.instance;
            case Error: return ErrorDeserializer_1.ErrorDeserializer.instance;
        }
        var deserializer = deserializers.get(type);
        if (deserializer !== undefined)
            return deserializer;
    }
    if (type === null)
        return NullDeserializer_1.NullDeserializer.instance;
    return DefaultDeserializer_1.DefaultDeserializer.instance;
}
exports.getInstance = getInstance;
//# sourceMappingURL=Deserializer.js.map