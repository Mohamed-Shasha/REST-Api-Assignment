"use strict";
/*--------------------------------------------------------*\
|                                                          |
|                          hprose                          |
|                                                          |
| Official WebSite: https://hprose.com                     |
|                                                          |
| DateSerializer.ts                                        |
|                                                          |
| hprose Date serializer for TypeScript.                   |
|                                                          |
| LastModified: Jan 11, 2019                               |
| Author: Ma Bingyao <andot@hprose.com>                    |
|                                                          |
\*________________________________________________________*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ReferenceSerializer_1 = require("./ReferenceSerializer");
var ValueWriter_1 = require("../ValueWriter");
var DateSerializer = /** @class */ (function (_super) {
    __extends(DateSerializer, _super);
    function DateSerializer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DateSerializer.prototype.write = function (writer, value) {
        _super.prototype.write.call(this, writer, value);
        var stream = writer.stream;
        writer.utc ? ValueWriter_1.writeUTCDate(stream, value) : ValueWriter_1.writeLocalDate(stream, value);
    };
    return DateSerializer;
}(ReferenceSerializer_1.ReferenceSerializer));
exports.DateSerializer = DateSerializer;
//# sourceMappingURL=DateSerializer.js.map